# Generated by Django 5.1.2 on 2024-11-06 17:35

import AppSIT.validators
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(verbose_name='Semestre')),
                ('subject_name', models.CharField(max_length=100, verbose_name='Nombre de materia')),
                ('clave', models.CharField(default='default_clave', max_length=15, unique=True, verbose_name='Clave de Materia')),
                ('credits', models.IntegerField(default=1, verbose_name='Créditos')),
                ('year', models.IntegerField(default=2024, verbose_name='Año')),
                ('period', models.CharField(choices=[('agosto-diciembre', 'Agosto-Diciembre'), ('enero-junio', 'Enero-Junio')], default='enero-junio', max_length=20, verbose_name='Período')),
            ],
            options={
                'verbose_name': 'Materia',
                'verbose_name_plural': 'Materias',
            },
        ),
        migrations.CreateModel(
            name='TeacherSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_monday', models.CharField(blank=True, max_length=11, null=True, verbose_name='Horario Lunes')),
                ('schedule_tuesday', models.CharField(blank=True, max_length=11, null=True, verbose_name='Horario Martes')),
                ('schedule_wednesday', models.CharField(blank=True, max_length=11, null=True, verbose_name='Horario Miércoles')),
                ('schedule_thursday', models.CharField(blank=True, max_length=11, null=True, verbose_name='Horario Jueves')),
                ('schedule_friday', models.CharField(blank=True, max_length=11, null=True, verbose_name='Horario Viernes')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSIT.subject', verbose_name='Materia')),
            ],
            options={
                'verbose_name': 'Docente-Materia',
                'verbose_name_plural': 'Docentes-Materias',
            },
        ),
        migrations.CreateModel(
            name='ClassSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('teacher_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSIT.teachersubject', verbose_name='Docente y Materia')),
            ],
            options={
                'verbose_name': 'Sesión de Clase',
                'verbose_name_plural': 'Sesiones de Clase',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True, validators=[AppSIT.validators.validate_username])),
                ('apellido_paterno', models.CharField(blank=True, max_length=150, validators=[AppSIT.validators.validate_no_numbers])),
                ('apellido_materno', models.CharField(blank=True, max_length=150, validators=[AppSIT.validators.validate_no_numbers])),
                ('first_name', models.CharField(max_length=150, validators=[AppSIT.validators.validate_no_numbers])),
                ('user_type', models.CharField(choices=[('Docente', 'Docente'), ('Administrador', 'Administrador'), ('Estudiante', 'Estudiante'), ('Coordinador', 'Coordinador')], max_length=50)),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino'), ('Otro', 'Otro')], default='Otro', max_length=15)),
                ('academia', models.CharField(choices=[('ISC', 'Ingenieria Sistemas Computacionales'), ('IM', 'Ingenieria Mecatronica'), ('IB', 'Ingenieria Bioquimica'), ('II', 'Ingenieria Industrial'), ('LG', 'Licenciatura Gastronomia'), ('N/A', 'No aplica')], default='N/A', max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece el usuario.', related_name='appsit_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos específicos para este usuario.', related_name='appsit_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TutoringSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha')),
                ('is_group', models.BooleanField(default=False, verbose_name='Es grupo')),
                ('tutor', models.ForeignKey(limit_choices_to={'user_type': 'Docente'}, on_delete=django.db.models.deletion.CASCADE, related_name='tutoring_sessions', to='AppSIT.user')),
            ],
            options={
                'unique_together': {('tutor', 'date', 'is_group')},
            },
        ),
        migrations.AddField(
            model_name='teachersubject',
            name='teacher',
            field=models.ForeignKey(limit_choices_to={'user_type': 'Docente'}, on_delete=django.db.models.deletion.CASCADE, to='AppSIT.user', verbose_name='Docente'),
        ),
        migrations.CreateModel(
            name='StudentSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSIT.subject', verbose_name='Materia')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'Estudiante'}, on_delete=django.db.models.deletion.CASCADE, to='AppSIT.user', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Estudiante-Materia',
                'verbose_name_plural': 'Estudiantes-Materias',
                'unique_together': {('student', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=2, verbose_name='Grupo')),
                ('semester', models.IntegerField(verbose_name='Semestre')),
                ('teacher', models.ForeignKey(limit_choices_to={'user_type': 'Docente'}, on_delete=django.db.models.deletion.CASCADE, to='AppSIT.user', verbose_name='Tutor')),
            ],
            options={
                'verbose_name': 'Grupo-Tutor',
                'verbose_name_plural': 'Grupos-Tutores',
                'unique_together': {('group_name', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='TutoringAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_present', models.BooleanField(default=True, verbose_name='Presente')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='AppSIT.tutoringsession')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'Estudiante'}, on_delete=django.db.models.deletion.CASCADE, to='AppSIT.user', verbose_name='Estudiante')),
            ],
            options={
                'unique_together': {('session', 'student')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='teachersubject',
            unique_together={('teacher', 'subject')},
        ),
        migrations.CreateModel(
            name='StudentGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSIT.group', verbose_name='Grupo')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'Estudiante'}, on_delete=django.db.models.deletion.CASCADE, to='AppSIT.user', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Estudiante-Grupo',
                'verbose_name_plural': 'Estudiantes-Grupos',
                'unique_together': {('student', 'group')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_taken', models.IntegerField(default=1, verbose_name='Semestre Tomado')),
                ('parcial_1', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('parcial_2', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('parcial_3', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('parcial_4', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('student_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSIT.studentsubject', verbose_name='Estudiante y Materia')),
                ('teacher', models.ForeignKey(limit_choices_to={'user_type': 'Docente'}, on_delete=django.db.models.deletion.CASCADE, to='AppSIT.user', verbose_name='Docente')),
            ],
            options={
                'verbose_name': 'Calificación',
                'verbose_name_plural': 'Calificaciones',
                'unique_together': {('teacher', 'student_subject', 'semester_taken')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Presente', 'Presente'), ('Ausente', 'Ausente')], default='Presente', max_length=8, verbose_name='Estado')),
                ('class_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSIT.classsession', verbose_name='Sesión de Clase')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'Estudiante'}, on_delete=django.db.models.deletion.CASCADE, to='AppSIT.user', verbose_name='Estudiante')),
            ],
            options={
                'verbose_name': 'Asistencia',
                'verbose_name_plural': 'Asistencias',
                'unique_together': {('class_session', 'student')},
            },
        ),
    ]
